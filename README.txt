сборка для postgresql (по умолчанию):
	docker-compose run web python /code/manage.py migrate --noinput
	docker-compose run web python /code/manage.py createsuperuser --username admin --email q@q.com
	docker-compose up -d --build

Если хотите БД SQLite3 с уже имеющимся опросом, в settings.py, параметру "POSTGRESQL_DB" присвойте значение False. Выполните "docker-compose up -d --build"

Функционал для администратора системы:
	1. вариант - http://localhost:8000/admin/ (админка Django)
	2. вариант - http://localhost:8000/ (GET, POST, PUT, PATCH, DELETE только для админа) так же доступны фильтры, для удобного отображения

Функционал для пользователя:
	1. http://localhost:8000/ (просмотр опросов и вопросов с фильтрами по опросам)
	2. http://localhost:8000/answers/
		(GET: для подробного отображения ответов на опросы)
		(POST: для ответов на вопросы в формате json)

POST JSON:
	Схема:
	{
	    "answers": {
		"id вопроса": {"тип вопроса": "текстовый ответ"},
		"id вопроса": {"тип вопроса": ответ_с_выбором_одно_варианта},
		"id вопроса": {"тип вопроса": [ответ, с, выбором, нескольких, вариантов]}
	   }
	}
	Пример (Содержит в себе ответы на 2 опроса сразу [6,7 - ответы на 2ой опрос]):
	{
	    "answers": {
		"3": {"text": "Ну это конечно не беременная трюфелем картошка, но есть можно."},
		"4": {"o_ch": 6},
		"5": {"m_ch": [8, 9]},
		"6": {"text": "Ну это конечно не беременная трюфелем картошка, но есть можно."},
		"7": {"text": "Ну это конечно не беременная трюфелем картошка, но есть можно."}
	   }
	}
